version: "3.6"

x-build-args:
  &build_args
  INSTALL_PYTHON_VERSION: "3.9"
  INSTALL_NODE_VERSION: "16"

x-default-volumes:
  &default_volumes
  volumes:
    - ./:/app
#    - node-modules:/app/node_modules
#    - ./dev.db:/tmp/dev.db

services:
  flask-dev:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    image: "chicagodir-development"
    ports:
      - "8080:5000"
      - "2992:2992"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://hello_flask:hello_flask@db:5432/chicagodir_dev
    <<: *default_volumes

  flask-prod:
    build:
      context: .
      target: production
      args:
        <<: *build_args
    image: "chicagodir-production"
    ports:
      - "8080:5000"
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
      LOG_LEVEL: info
      GUNICORN_WORKERS: 4
      DATABASE_URL: postgresql://hello_flask:hello_flask@db:5432/chicagodir_dev

    <<: *default_volumes

  manage:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    entrypoint: pipenv run flask
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://hello_flask:hello_flask@db:5432/chicagodir_dev
      - FLASK_ENV=production
      - FLASK_DEBUG=0
    image: "chicagodir-manage"
    stdin_open: true
    tty: true
    <<: *default_volumes

  db:
    image: postgres:14.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=chicagodir_dev
volumes:
  node-modules:
  postgres_data:
