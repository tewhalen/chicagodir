version: "3.6"

x-build-args:
  &build_args
  INSTALL_PYTHON_VERSION: "3.9"
  INSTALL_NODE_VERSION: "16"

x-default-volumes:
  &default_volumes
  volumes:
    - ./:/app
#    - node-modules:/app/node_modules
#    - ./dev.db:/tmp/dev.db

services:
  flask-dev:
    build:
      context: .
      target: execution
      args:
        <<: *build_args
    image: "chicagodir-development"
    command: npm start
    ports:
      - "8080:5000"
    depends_on:
      - db
      - redis
      - worker-dev
    environment:
      DATABASE_URL: postgresql://hello_flask:hello_flask@db:5432/chicagodir_dev
      REDIS_URL: ${REDIS_URL}
    <<: *default_volumes

  manage:
    build:
      context: .
      target: execution
      args:
        <<: *build_args
    entrypoint: poetry run flask
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://hello_flask:hello_flask@db:5432/chicagodir_dev
      - FLASK_ENV=production
      - FLASK_DEBUG=0
    image: "chicagodir-manage"
    stdin_open: true
    tty: true
    <<: *default_volumes

  db:
    image: postgis/postgis:14-3.2
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=chicagodir_dev

  redis:
    image: redis:6.2-alpine

  worker-dev:
    build:
      context: .
      target: execution
      args:
        <<: *build_args
    image: "chicagodir-worker"
    depends_on:
      - db
      - redis
    command: flask run_worker
    environment:
      DATABASE_URL: postgresql://hello_flask:hello_flask@db:5432/chicagodir_dev
      REDIS_URL: ${REDIS_URL}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
    <<: *default_volumes

volumes:
  node-modules:
  postgres_data:
